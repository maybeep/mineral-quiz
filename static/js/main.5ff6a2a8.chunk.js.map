{"version":3,"sources":["components/Header.tsx","components/Menu.tsx","App.tsx","index.tsx"],"names":["Header","className","Menu","href","App","questions","questionText","answerOptions","answerText","isCorrect","useState","currentQuestion","setCurrentQuestion","currentImage","setImage","showScore","setShowScore","score","setScore","length","map","answerOption","type","onClick","nextQuestion","nextImage","handleAnswerButtonClick","src","process","height","width","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAEO,SAASA,IACZ,OAAO,qBAAKC,UAAU,SAAf,SACH,gDCFD,SAASC,IACZ,OAAO,sBAAKD,UAAU,kBAAf,UACH,mBAAGA,UAAU,WAAWE,KAAK,IAA7B,iCACA,mBAAGF,UAAU,WAAWE,KAAK,IAA7B,6BACA,mBAAGF,UAAU,WAAWE,KAAK,IAA7B,6BACA,mBAAGF,UAAU,WAAWE,KAAK,IAA7B,4BC+GOC,MAhHf,WAEE,IAAMC,EAAY,CAChB,CACEC,aAAc,kCACdC,cAAe,CACb,CAAEC,WAAY,oBAAqBC,WAAW,GAC9C,CAAED,WAAY,oBAAqBC,WAAW,GAC9C,CAAED,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,gCAAiCC,WAAW,KAG9D,CACEH,aAAc,kDACdC,cAAe,CACb,CAAEC,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,oBAAqBC,WAAW,GAC9C,CAAED,WAAY,gCAAiCC,WAAW,GAC1D,CAAED,WAAY,oBAAqBC,WAAW,KAGlD,CACEH,aAAc,oDACdC,cAAe,CACb,CAAEC,WAAY,oBAAqBC,WAAW,GAC9C,CAAED,WAAY,oBAAqBC,WAAW,GAC9C,CAAED,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,gCAAiCC,WAAW,KAG9D,CACEH,aAAc,uDACdC,cAAe,CACb,CAAEC,WAAY,oBAAqBC,WAAW,GAC9C,CAAED,WAAY,oBAAqBC,WAAW,GAC9C,CAAED,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,gCAAiCC,WAAW,MAMhE,EAA8CC,mBAAS,GAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KAGA,EAAiCF,mBAAS,GAA1C,mBAAOG,EAAP,KAAqBC,EAArB,KAmBA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAEA,EAA0BN,mBAAS,GAAnC,mBAAOO,EAAP,KAAcC,EAAd,KAEA,OACE,sBAAKjB,UAAU,kBAAf,UACE,qBAAKA,UAAU,MAAf,SACE,cAACD,EAAD,MAEF,sBAAKC,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,cAACC,EAAD,MAEF,sBAAKD,UAAU,MAAf,UACA,qDACA,qBAAKA,UAAU,MAAf,SACGc,EACC,sBAAKd,UAAU,gBAAf,wBACcgB,EADd,WAC6BZ,EAAUc,UAGvC,qCACE,sBAAKlB,UAAU,mBAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,6CAAgBU,EAAkB,KADpC,IAC+CN,EAAUc,UAEzD,qBAAKlB,UAAU,gBAAf,SAAgCI,EAAUM,GAAiBL,kBAE7D,qBAAKL,UAAU,iBAAf,SACGI,EAAUM,GAAiBJ,cAAca,KAAI,SAACC,GAAD,OAC5C,wBAAQC,KAAK,SAASrB,UAAU,sBAAsBsB,QAAS,kBA9C/C,SAACd,GAC3BA,GACFS,EAASD,EAAQ,GAEnB,IAAMO,EAAeb,EAAkB,EACjCc,EAAYZ,EAAe,EAC7BW,EAAenB,EAAUc,QAC3BP,EAAmBY,GACnBV,EAASW,IAGTT,GAAa,GAmCoEU,CAAwBL,EAAaZ,YAA1G,SAAuHY,EAAab,0BAOhJ,qBAAKP,UAAU,MAAf,SACE,qBAAKA,UAAU,gBAAf,SACE,qBAAK0B,IAAKC,yBAAuCf,EAAe,GAAK,OACrEgB,OAAO,QAAQC,MAAM,oBCzG/BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.5ff6a2a8.chunk.js","sourcesContent":["import React from 'react'\n\nexport function Header () {\n    return <div className=\"header\">\n        <h1>Mineral Quiz</h1>\n    </div>\n    }","import React from 'react'\n\nexport function Menu () {\n    return <nav className=\"nav flex-column\">\n        <a className=\"nav-link\" href=\"#\">Framework Silicates</a>\n        <a className=\"nav-link\" href=\"#\">Sheet Silicates</a>\n        <a className=\"nav-link\" href=\"#\">Chain Silicates</a>\n        <a className=\"nav-link\" href=\"#\">Disilicates</a>\n    </nav>\n    }\n\n","import React, { useState } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Header } from './components/Header';\nimport { Menu } from './components/Menu';\n\nfunction App(): JSX.Element {\n  // https://github.com/chrisblakely01/quiz-app/blob/master/starter/src/App.js\n  const questions = [\n    {\n      questionText: 'What is the formula for Quartz?',\n      answerOptions: [\n        { answerText: '(Na, K) Al Si3 O8', isCorrect: false },\n        { answerText: 'Na3 K Al4 Si4 O16', isCorrect: false },\n        { answerText: 'Si O2', isCorrect: true },\n        { answerText: 'Na Al Si3 O8 to Ca Al2 Si2 O8', isCorrect: false },\n      ],\n    },\n    {\n      questionText: 'What is the formula for Alkali Feldspar Series?',\n      answerOptions: [\n        { answerText: 'Si O2', isCorrect: false },\n        { answerText: '(Na, K) Al Si3 O8', isCorrect: true },\n        { answerText: 'Na Al Si3 O8 to Ca Al2 Si2 O8', isCorrect: false },\n        { answerText: 'Na3 K Al4 Si4 O16', isCorrect: false },\n      ],\n    },\n    {\n      questionText: 'What is the formula for Nepheline (Feldspathoid)?',\n      answerOptions: [\n        { answerText: 'Na3 K Al4 Si4 O16', isCorrect: true },\n        { answerText: '(Na, K) Al Si3 O8', isCorrect: false },\n        { answerText: 'Si O2', isCorrect: false },\n        { answerText: 'Na Al Si3 O8 to Ca Al2 Si2 O8', isCorrect: false },\n      ],\n    },\n    {\n      questionText: 'What is the formula for Plagioclase Feldspar Series?',\n      answerOptions: [\n        { answerText: 'Na3 K Al4 Si4 O16', isCorrect: false },\n        { answerText: '(Na, K) Al Si3 O8', isCorrect: false },\n        { answerText: 'Si O2', isCorrect: false },\n        { answerText: 'Na Al Si3 O8 to Ca Al2 Si2 O8', isCorrect: true },\n      ],\n    },\n  ];\n\n  // state for holding current quesition number\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  \n  // state for storing which image to show (corresponds with question #)\n  const [currentImage, setImage] = useState(0);\n\n  // go to next question when answer is clicked\n  const handleAnswerButtonClick = (isCorrect: boolean) => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n    const nextQuestion = currentQuestion + 1;\n    const nextImage = currentImage + 1;\n    if (nextQuestion < questions.length){\n      setCurrentQuestion(nextQuestion);\n      setImage(nextImage);\n    } else {\n      // show score after last question\n      setShowScore(true);\n    }\n  }\n\n  // state for storing whether or not to show the score screen\n  const [showScore, setShowScore] = useState(false);\n\n  const [score, setScore] = useState(0);\n\n  return (\n    <div className='container-fluid'>\n      <div className='row'>\n        <Header />\n      </div>\n      <div className='row'>\n        <div className='col-sm-2'>\n          <Menu />\n        </div>\n        <div className='col'>\n        <h1>Framework Silicates</h1>\n        <div className='app'>\n          {showScore ? (\n            <div className='score-section'>\n              You scored {score} out of {questions.length}\n            </div>\n          ) : (\n            <>\n              <div className='question-section'>\n                <div className='question-count'>\n                  <span>Question {currentQuestion + 1}</span>/{questions.length}\n                </div>\n                <div className='question-text'>{questions[currentQuestion].questionText}</div>\n              </div>\n              <div className='answer-section'>\n                {questions[currentQuestion].answerOptions.map((answerOption) => (\n                  <button type=\"button\" className=\"btn btn-dark btn-sm\" onClick={() => handleAnswerButtonClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\n                ))}\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n      <div className='col'>\n        <div className='mineral-image'>\n          <img src={process.env.PUBLIC_URL + '/images/' + (currentImage + 1) + '.jpg'} \n          height=\"250px\" width=\"auto\"/>\n        </div>\n      </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}